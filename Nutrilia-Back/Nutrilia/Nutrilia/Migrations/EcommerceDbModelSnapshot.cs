// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nutrilia.DataBase;

namespace Nutrilia.Migrations
{
    [DbContext(typeof(EcommerceDb))]
    partial class EcommerceDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("CartPlans", b =>
                {
                    b.Property<int>("CartId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlansId_Plan")
                        .HasColumnType("INTEGER");

                    b.HasKey("CartId", "PlansId_Plan");

                    b.HasIndex("PlansId_Plan");

                    b.ToTable("CartPlans");
                });

            modelBuilder.Entity("CartUsers", b =>
                {
                    b.Property<int>("CartId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsersId_User")
                        .HasColumnType("INTEGER");

                    b.HasKey("CartId", "UsersId_User");

                    b.HasIndex("UsersId_User");

                    b.ToTable("CartUsers");
                });

            modelBuilder.Entity("Nutrilia.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id_Plan")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id_User")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("Nutrilia.Models.Plans", b =>
                {
                    b.Property<int>("Id_Plan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageURl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id_Plan");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("Nutrilia.Models.Recipes", b =>
                {
                    b.Property<int>("Id_Recipe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id_Recipe");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("Nutrilia.Models.Users", b =>
                {
                    b.Property<int>("Id_User")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bank_Account")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id_User");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PlansUsers", b =>
                {
                    b.Property<int>("PlansId_Plan")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsersId_User")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlansId_Plan", "UsersId_User");

                    b.HasIndex("UsersId_User");

                    b.ToTable("PlansUsers");
                });

            modelBuilder.Entity("CartPlans", b =>
                {
                    b.HasOne("Nutrilia.Models.Cart", null)
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nutrilia.Models.Plans", null)
                        .WithMany()
                        .HasForeignKey("PlansId_Plan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CartUsers", b =>
                {
                    b.HasOne("Nutrilia.Models.Cart", null)
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nutrilia.Models.Users", null)
                        .WithMany()
                        .HasForeignKey("UsersId_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlansUsers", b =>
                {
                    b.HasOne("Nutrilia.Models.Plans", null)
                        .WithMany()
                        .HasForeignKey("PlansId_Plan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nutrilia.Models.Users", null)
                        .WithMany()
                        .HasForeignKey("UsersId_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
